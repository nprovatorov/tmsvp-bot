# messages.py
from textwrap import dedent
from datetime import datetime
from typing import List, Optional, Dict, Any
from .util import humanReadableSize

def _md(s: str) -> str:
    # –Ω–µ —ái–ø–∞—Ç–∏! –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –µ–∫—Ä–∞–Ω –¥–ª—è –±–µ–∫—Ç–∏–∫—ñ–≤, —â–æ–± —ñ–º–µ–Ω–∞ —Ñ–∞–π–ª—ñ–≤/—Å–∏–≥–Ω–∞—Ç—É—Ä–∏ –Ω–µ –ª–∞–º–∞–ª–∏ Markdown
    return (s or "").replace("`", " º")

# --- –ê–¥–º—ñ–Ω: —Å—Ç–∞—Ä—Ç –∑–∞–ø–∏—Ç—É –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ---
def admin_upload_started(channel_handle, filename, resolution, link, author) -> str:
    title = f"üÜï –ù–æ–≤–∏–π –∑–∞–ø–∏—Ç –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥ #{channel_handle or 'unknown'}"
    lines = [
        title,
        f"- –§–∞–π–ª: `{_md(filename)}`" + (f" ({resolution})" if resolution else ""),
        f"- –í—ñ–¥: {author}",
    ]
    return "\n".join(lines)

# --- –ê–¥–º—ñ–Ω: –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (—É—Å—ñ –∫–µ–π—Å–∏) ---
def admin_upload_finished(
    channel_handle: str | None,
    author: str,
    filename: str,
    resolution: str | None,
    size_h: str,
    av_status: str,          # "clean" | "infected:<sig>" | "error"
    retention_days: int,
    delete_on: datetime | None,
    description: str | None = None,
) -> str:
    title = "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    lines = [title]
    lines.append(f"- –í—ñ–¥: #{channel_handle or 'unknown'} (–∞–∫–∞—É–Ω—Ç: {author})")
    lines.append(f"- –§–∞–π–ª: `{_md(filename)}`" + (f" ({resolution})" if resolution else ""))
    lines.append(f"- –†–æ–∑–º—ñ—Ä: **{size_h}**")

    if av_status.startswith("infected:"):
        sig = av_status.split(":", 1)[1]
        lines.append(f"- –ê–Ω—Ç–∏–≤—ñ—Ä—É—Å: ‚ùå –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≥—Ä–æ–∑—É (`{_md(sig)}`)")
        lines.append("- –°—Ç–∞—Ç—É—Å: —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ –∑–∞–¥–ª—è –±–µ–∑–ø–µ–∫–∏")
    elif av_status == "error":
        lines.append("- –ê–Ω—Ç–∏–≤—ñ—Ä—É—Å: ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (—Ñ–∞–π–ª –∑–∞–ª–∏—à–µ–Ω–æ)")
        if delete_on:
            lines.append(f"- –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è: {retention_days} –¥–Ω. ¬∑ –∞–≤—Ç–æ–≤–∏–¥–∞–ª–µ–Ω–Ω—è **{delete_on:%Y-%m-%d}**")
    else:
        lines.append("- –ê–Ω—Ç–∏–≤—ñ—Ä—É—Å: ‚úÖ –ß–∏—Å—Ç–æ")
        if delete_on:
            lines.append(f"- –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è: {retention_days} –¥–Ω. ¬∑ –∞–≤—Ç–æ–≤–∏–¥–∞–ª–µ–Ω–Ω—è **{delete_on:%Y-%m-%d}**")

    if description:
        desc = description.strip()
        if len(desc) > 1500:
            desc = desc[:1500] + "‚Ä¶"
        lines.append("")
        lines.append("**–û–ø–∏—Å**")
        lines.append(_md(desc))

    return "\n".join(lines)

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: –¥–æ–¥–∞–Ω–æ –¥–æ —á–µ—Ä–≥–∏ ---
def file_added(path: str) -> str:
    return f"‚úÖ –§–∞–π–ª `{_md(path)}` –¥–æ–¥–∞–Ω–æ –¥–æ —á–µ—Ä–≥–∏ –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.\n–Ø –ø–æ–≤—ñ–¥–æ–º–ª—é, —â–æ–π–Ω–æ –≤—Å–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è."

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: —Ñ–∞–π–ª –≤–∂–µ —ñ—Å–Ω—É—î (–∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é —â–æ–¥–æ –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è) ---
def file_exists(path: str) -> str:
    return dedent(f"""
        ‚ÑπÔ∏è –¢–∞–∫–∏–π —Ñ–∞–π–ª —É–∂–µ —î —É —Å—Ö–æ–≤–∏—â—ñ:
        ‚Ä¢ `{_md(path)}`
        
        **–Ø–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Å–µ –∂ —Ç–∞–∫–∏?**
        ‚Äî –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª —â–µ —Ä–∞–∑ —ñ–∑ –ø—ñ–¥–ø–∏—Å–æ–º `> –Ω–æ–≤–∞_–Ω–∞–∑–≤–∞.ext` ‚Äî –º–∏ –∑–±–µ—Ä–µ–∂–µ–º–æ –π–æ–≥–æ –ø—ñ–¥ –Ω–æ–≤–æ—é –Ω–∞–∑–≤–æ—é.
        **–í–∞–∂–ª–∏–≤–æ:** —è–∫—â–æ –ø—ñ–¥–ø–∏—Å –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ `>`, —É–≤–µ—Å—å –ø—ñ–¥–ø–∏—Å —Å–ø—Ä–∏–π–º–∞—î—Ç—å—Å—è —è–∫ *–Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É*, —ñ –æ–ø–∏—Å **–Ω–µ –±—É–¥–µ** –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    """).strip()

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: —Å—Ç–∞—Ä—Ç ---
def starting_download() -> str:
    return "‚ñ∂Ô∏è –ü–æ—á–∏–Ω–∞—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚Ä¶"

# (–∑–∞ –ø–æ—Ç—Ä–µ–±–∏ —Å—É–º—ñ—Å–Ω–æ—Å—Ç—ñ –∑ —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏–º –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º)
def download_done(filename: str, total_h: str, took_h: str, speed_h: str) -> str:
    return dedent(f"""
        ‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ.
        ‚Ä¢ –ù–∞–∑–≤–∞: `{_md(filename)}`
        ‚Ä¢ –†–æ–∑–º—ñ—Ä: {total_h}
        –î–µ—Ç–∞–ª—ñ: —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å {took_h} ‚Ä¢ —à–≤–∏–¥–∫—ñ—Å—Ç—å ~{speed_h}/—Å
    """).strip()

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: –ø—Ä–æ–≥—Ä–µ—Å ---
def download_progress(filename: str, got_h: str, total_h: str, pct: float, speed_h: str, tte_h: str) -> str:
    return dedent(f"""
        –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é: `{_md(filename)}`
        **{got_h}/{total_h} ({pct:0.2f}%)**
        –®–≤–∏–¥–∫—ñ—Å—Ç—å: ~{speed_h}/—Å ‚Ä¢ –ª–∏—à–∏–ª–æ—Å—è {tte_h}
    """).strip()

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: –∑—É–ø–∏–Ω–µ–Ω–æ (–∑–∞—Å—Ç–∞—Ä—ñ–ª–µ, –∞–ª–µ –ª–∏—à–∞—î–º–æ) ---
def stopped(filename: str) -> str:
    return f"‚èπÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è `{_md(filename)}` –∑—É–ø–∏–Ω–µ–Ω–æ."

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: –∫–æ–ª–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –ª–∏—à–µ —É –ø—É–±–ª—ñ—á–Ω–æ–º—É —á–∞—Ç—ñ ---
def uploads_notice_disabled() -> str:
    return "‚ÑπÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è –ª–∏—à–µ —É –ø—É–±–ª—ñ—á–Ω–æ–º—É —á–∞—Ç—ñ –±–æ—Ç–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª —Ç–∞–º."

# --- –ê–¥–º—ñ–Ω/–ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–∞–Ω–∞–ª: –∫–æ—Ä–æ—Ç–∫–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (—è–∫—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è) ---
def notify_new_upload(channel: str, filename: str, size_h: str, author: str) -> str:
    return dedent(f"""
        üÜï –ù–æ–≤–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ **#{channel}**
        - –§–∞–π–ª: `{_md(filename)}`
        - –†–æ–∑–º—ñ—Ä: {size_h}
        - –í—ñ–¥: {author}
    """).strip()

# --- –ê–¥–º—ñ–Ω: —â–æ—Ç–∏–∂–Ω–µ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (–ø—Ä–æ—Å—Ç–µ –∑ housekeeping; –¥–µ—Ç–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç –∑–º—ñ–Ω—é–≤–∞—Ç–∏–º–µ–º–æ –æ–∫—Ä–µ–º–æ) ---
def weekly_usage(total_h: str, used_h: str, free_h: str) -> str:
    return dedent(f"""
        üìä –©–æ—Ç–∏–∂–Ω–µ–≤–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –¥–∏—Å–∫–∞
        - –£—Å—å–æ–≥–æ: **{total_h}**
        - –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: **{used_h}**
        - –í—ñ–ª—å–Ω–æ: **{free_h}**
    """).strip()

# --- –ê–¥–º—ñ–Ω: –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è ---
def retention_warning(filename: str, age_days: int, delete_in_days: int) -> str:
    return f"‚ö†Ô∏è –§–∞–π–ª `{_md(filename)}` –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è {age_days} –¥–Ω. —ñ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delete_in_days} –¥–Ω."

# --- –ê–¥–º—ñ–Ω: –≤–∏–¥–∞–ª–µ–Ω–æ –∑–∞ —Ä–µ—Ç–µ–Ω—Ü—ñ—î—é ---
def retention_deleted(filename: str, age_days: int) -> str:
    return f"üßπ –í–∏–¥–∞–ª–µ–Ω–æ `{_md(filename)}` (–≤—ñ–∫: {age_days} –¥–Ω.)."

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: —É—Å–ø—ñ—Ö ---
def download_success_user(filename: str, size_h: str, time_h: str, speed_h: str) -> str:
    return (
        f"‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª –∑–±–µ—Ä–µ–∂–µ–Ω–æ.\n"
        f"‚Ä¢ –ù–∞–∑–≤–∞: `{_md(filename)}`\n"
        f"‚Ä¢ –†–æ–∑–º—ñ—Ä: {size_h}\n"
        f"–î—è–∫—É—é –∑–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è.\n\n"
        f"–î–µ—Ç–∞–ª—ñ: —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å {time_h} ‚Ä¢ —à–≤–∏–¥–∫—ñ—Å—Ç—å ~{speed_h}/—Å"
    )

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: —ñ–Ω—Ñ—ñ–∫–æ–≤–∞–Ω–æ ---
def download_infected_user(filename: str, signature: str) -> str:
    return (
        "‚ùå –ù–∞ –∂–∞–ª—å, —É —Ñ–∞–π–ª—ñ –≤–∏—è–≤–ª–µ–Ω–æ –∑–∞–≥—Ä–æ–∑—É, —Ç–æ–º—É –π–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–æ –¥–ª—è –±–µ–∑–ø–µ–∫–∏.\n"
        f"‚Ä¢ –ù–∞–∑–≤–∞: `{_md(filename)}`\n"
        f"‚Ä¢ –ü—ñ–¥–ø–∏—Å: `{_md(signature)}`\n"
        "–Ø–∫—â–æ –≤–≤–∞–∂–∞—î—Ç–µ —Ü–µ –ø–æ–º–∏–ª–∫–æ—é, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —ñ–Ω—à—É –≤–µ—Ä—Å—ñ—é –∞–±–æ –∑–≤‚Äô—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏."
    )

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: –∑–±—ñ–π ---
def download_failed_user(filename: str) -> str:
    return (
        "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª.\n"
        f"‚Ä¢ –ù–∞–∑–≤–∞: `{_md(filename)}`\n"
        "–ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —ñ–Ω—à–∏–π —Ñ–æ—Ä–º–∞—Ç."
    )

# --- –ê–¥–º—ñ–Ω: —á–∏—Å—Ç–∏–π ---
def admin_download_clean(channel: str, filename: str, size_h: str, author: str) -> str:
    return (
        "‚úÖ –§–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ: —á–∏—Å—Ç–∏–π\n"
        f"- –§–∞–π–ª: `{_md(filename)}` ({size_h})\n"
        f"- –ó–≤—ñ–¥–∫–∏: #{channel} ¬∑ –≤—ñ–¥ {author}"
    )

# --- –ê–¥–º—ñ–Ω: —ñ–Ω—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π ---
def admin_download_infected(filename: str, signature: str) -> str:
    return f"üö® –í–∏—è–≤–ª–µ–Ω–æ –∑–∞–≥—Ä–æ–∑—É —É —Ñ–∞–π–ª—ñ: `{_md(filename)}` (—Å–∏–≥–Ω–∞—Ç—É—Ä–∞: `{_md(signature)}`) ‚Äî —Ñ–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ."

# --- –ê–¥–º—ñ–Ω: –ø–æ–º–∏–ª–∫–∞ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è ---
def admin_scan_error(filename: str) -> str:
    return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–Ω—Ç–∏–≤—ñ—Ä—É—Å–æ–º –¥–ª—è `{_md(filename)}`; —Ñ–∞–π–ª –∑–∞–ª–∏—à–µ–Ω–æ."

# --- –ê–¥–º—ñ–Ω: –∑–±—ñ–π –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ---
def admin_download_crashed(filename: str) -> str:
    return f"‚ùå –ó–±—ñ–π –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è `{_md(filename)}`."

# --- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ: —Å–∫–∞—Å–æ–≤–∞–Ω–æ ---
def download_cancelled_user(filename: str) -> str:
    name = _md(filename)
    return f"üõë –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è `{name}` —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∑–∞ –≤–∞—à–∏–º –∑–∞–ø–∏—Ç–æ–º. –§–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ —ñ–∑ —Å–µ—Ä–≤–µ—Ä–∞."

# --- –ê–¥–º—ñ–Ω: —Å–∫–∞—Å–æ–≤–∞–Ω–æ ---
def admin_upload_cancelled(channel_handle: str, author: str, filename: str) -> str:
    fname = _md(filename)
    title = "üõë –ó–∞–ø–∏—Ç –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"
    return "\n".join([
        title,
        f"- –í—ñ–¥: #{channel_handle or 'unknown'} (–∞–∫–∞—É–Ω—Ç: {author})",
        f"- –§–∞–π–ª: `{fname}`",
    ])


# --- Commands: user-facing texts (UA) ---

def start_text() -> str:
    return (
        "üëã –í—ñ—Ç–∞—î–º–æ!\n"
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª ‚Äî —è –∑–±–µ—Ä–µ–∂—É –π–æ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.\n"
        "–©–æ–± –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è, –≤–∫–∞–∂—ñ—Ç—å –ø—ñ–¥–ø–∏—Å `> –Ω–æ–≤–∞_–Ω–∞–∑–≤–∞.ext`.\n"
        "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–≤—ñ–¥–∫–∞? –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è /help."
    )

def help_text() -> str:
    return (
        "üìò **–î–æ–≤—ñ–¥–∫–∞**\n\n"
        "**–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î**\n"
        "‚Ä¢ –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª ‚Äî –±–æ—Ç –∑–±–µ—Ä–µ–∂–µ –π–æ–≥–æ —É —Å—Ö–æ–≤–∏—â–µ —Å–µ—Ä–≤–µ—Ä–∞.\n"
        "‚Ä¢ –Ø–∫—â–æ —Ñ–∞–π–ª —É–∂–µ —ñ—Å–Ω—É—î, –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –π–æ–≥–æ –∑–Ω–æ–≤—É –∑ –ø—ñ–¥–ø–∏—Å–æ–º `> –Ω–æ–≤–∞_–Ω–∞–∑–≤–∞.ext`.\n\n"
        "**–ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è**\n"
        "‚Ä¢ –ü—ñ–¥–ø–∏—Å, —â–æ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ `>`, —Å–ø—Ä–∏–π–º–∞—î—Ç—å—Å—è —è–∫ **–Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É** (–æ–ø–∏—Å –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è).\n\n"
        "**–û–ø–∏—Å —Ñ–∞–π–ª—É**\n"
        "‚Ä¢ –ó–≤–∏—á–∞–π–Ω–∏–π –ø—ñ–¥–ø–∏—Å –¥–æ —Ñ–∞–π–ª—É –±—É–¥–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ –∞–¥–º—ñ–Ω-–∫–∞–Ω–∞–ª—É —è–∫ –æ–ø–∏—Å.\n\n"
        "**–ö–æ–º–∞–Ω–¥–∏**\n"
        "‚Ä¢ /start ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –≤—Å—Ç—É–ø\n"
        "‚Ä¢ /help ‚Äî —Ü—è –¥–æ–≤—ñ–¥–∫–∞\n"
        "‚Ä¢ /usage ‚Äî —Å—Ç–∞–Ω —Å—Ö–æ–≤–∏—â–∞\n"
        "‚Ä¢ /use `<–ø–∞–ø–∫–∞>` ‚Äî –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –Ω–æ–≤—ñ —Ñ–∞–π–ª–∏ —É –≤–∫–∞–∑–∞–Ω—ñ–π –ø—ñ–¥–ø–∞–ø—Ü—ñ\n"
        "‚Ä¢ /leave ‚Äî –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –ø–∞–ø–∫–∏\n"
        "‚Ä¢ /get ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –ø–∞–ø–∫—É\n"
        "‚Ä¢ /add `<–ø–æ—Å–∏–ª–∞–Ω–Ω—è>` `[–Ω–æ–≤–∞_–Ω–∞–∑–≤–∞]` ‚Äî –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n"
        "‚Ä¢ /weekly ‚Äî –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —â–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç –≤ –∞–¥–º—ñ–Ω-–∫–∞–Ω–∞–ª"
    )

def usage_text(total_h: str, used_h: str, free_h: str) -> str:
    return (
        "üíΩ **–°—Ö–æ–≤–∏—â–µ**\n"
        f"‚Ä¢ –£—Å—å–æ–≥–æ: **{total_h}**\n"
        f"‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: **{used_h}**\n"
        f"‚Ä¢ –í—ñ–ª—å–Ω–æ: **{free_h}**"
    )

def use_need_path() -> str:
    return "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –ø—ñ–¥–ø–∞–ø–∫—É, –∫—É–¥–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ñ–∞–π–ª–∏. –ü—Ä–∏–∫–ª–∞–¥: `/use –ü—Ä–æ—î–∫—Ç–∏/–°—ñ—á–µ–Ω—å`"

def use_path_warning(safe_path: str, original: str) -> str:
    safe = _md(safe_path)
    orig = _md(original)
    return f"‚ö†Ô∏è –£–≤–∞–≥–∞: —à–ª—è—Ö –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –¥–æ `{safe}` (–∑–∞–º—ñ—Å—Ç—å `{orig}`)."

def use_ok() -> str:
    return "‚úÖ –ì–∞—Ä–∞–∑–¥, –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ–∞–π–ª–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º—É –≤ —Ü—ñ–π –ø–∞–ø—Ü—ñ."

def leave_ok() -> str:
    return "‚Ü©Ô∏è –ü–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –ø–∞–ø–∫–∏."

def get_folder(path: str) -> str:
    return f"üìÇ –ü–æ—Ç–æ—á–Ω–∞ –ø–∞–ø–∫–∞: `{_md(path)}`"

def add_need_user_client() -> str:
    return "–°–∏—Å—Ç–µ–º—É –±–æ—Ç–∞ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –≤–∞—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–π –∫–ª—ñ—î–Ω—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π)."

def add_need_link() -> str:
    return "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."

def add_invalid_link() -> str:
    return "–ù–µ–≤—ñ—Ä–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç —ñ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."

def add_message_not_found() -> str:
    return "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –≤–∞—à–æ–º—É –∞–∫–∞—É–Ω—Ç—ñ."

def add_no_media() -> str:
    return "–£ —Ü—å–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –Ω–µ–º–∞—î –º–µ–¥—ñ–∞—Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è."

def weekly_report_done() -> str:
    return "‚úÖ –©–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ –∞–¥–º—ñ–Ω-–∫–∞–Ω–∞–ª—É."

def weekly_report_failed() -> str:
    return "‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —â–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç."

def weekly_report_text(payload: Dict[str, Any]) -> str:
    """
    Format a weekly report using precomputed payload from metrics.py.
    payload keys (all computed in metrics.py):
      iso_year:int, iso_week:int, date_range:str,
      used:str, total:str,
      total_clean_bytes:int, wow_bytes:str,
      uploads_started:int, uploads_finished:int,
      clean_count:int, infected_count:int, cancelled_count:int, error_count:int, scan_error_count:int,
      busiest_hour: Optional[int], missing_desc_count:int,
      top_by_bytes: List[Tuple[str,int]], top_by_count: List[Tuple[str,int]],
      top_ext: List[Tuple[str,int]],
      largest_files: List[Tuple[str,int,str]],
      retention_notice_days:int, soon:int,
      deleted_files_count:int, deleted_bytes:int,
      oldest: Optional[int],
    """
    y = payload["iso_year"]
    w = payload["iso_week"]
    date_range = payload["date_range"]

    used = payload["used"]
    total = payload["total"]

    wow_bytes = payload["wow_bytes"]
    total_clean_bytes = payload["total_clean_bytes"]

    uploads_started = payload["uploads_started"]
    uploads_finished = payload["uploads_finished"]

    clean_count = payload["clean_count"]
    infected_count = payload["infected_count"]
    cancelled_count = payload["cancelled_count"]
    error_count = payload["error_count"]
    scan_error_count = payload["scan_error_count"]

    busiest_hour = payload.get("busiest_hour")
    missing_desc_count = payload.get("missing_desc_count", 0)

    top_by_bytes = payload.get("top_by_bytes", [])
    top_by_count = payload.get("top_by_count", [])
    top_ext = payload.get("top_ext", [])
    largest_files = payload.get("largest_files", [])

    retention_notice_days = payload["retention_notice_days"]
    soon = payload["soon"]
    deleted_files_count = payload["deleted_files_count"]
    deleted_bytes = payload["deleted_bytes"]
    oldest = payload.get("oldest")

    # UA bullets
    lines: List[str] = []
    lines.append(f"üìä **–©–æ—Ç–∏–∂–Ω–µ–≤–∏–π –∑–≤—ñ—Ç –±–æ—Ç–∞** ‚Äî ISO {y}-W{w:02d} ({date_range})")
    lines.append("")

    # Capacity
    lines.append("**–Ñ–º–Ω—ñ—Å—Ç—å**")
    lines.append(f"‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ / –£—Å—å–æ–≥–æ: {used} / {total}")
    lines.append(f"‚Ä¢ –ù–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∑–∞ —Ç–∏–∂–¥–µ–Ω—å: {humanReadableSize(total_clean_bytes)} ({wow_bytes})")
    lines.append("")

    # Volume
    lines.append("**–û–±—Å—è–≥**")
    lines.append(
        "‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏: "
        f"—á–∏—Å—Ç–∏—Ö {clean_count} ‚Ä¢ "
        f"–∑–∞–≥—Ä–æ–∑ {infected_count} ‚Ä¢ "
        f"—Å–∫–∞—Å–æ–≤–∞–Ω–æ {cancelled_count} ‚Ä¢ "
        f"–∑–±–æ—ó–≤ {error_count}"
    )
    lines.append(f"‚Ä¢ –†–æ–∑–ø–æ—á–∞—Ç–æ: {uploads_started} ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {uploads_finished}")
    if busiest_hour is not None:
        lines.append(f"‚Ä¢ –ù–∞–π–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ—à–∞ –≥–æ–¥–∏–Ω–∞: {busiest_hour:02d}:00")
    if missing_desc_count:
        lines.append(f"‚Ä¢ –ë–µ–∑ –æ–ø–∏—Å—É: {missing_desc_count}")
    lines.append("")

    # Clients
    lines.append("**–ö–ª—ñ—î–Ω—Ç–∏**")
    if top_by_bytes:
        txt = " ‚Ä¢ ".join([f"{k} {humanReadableSize(v)}" for k, v in top_by_bytes])
        lines.append(f"‚Ä¢ –ó–∞ –æ–±—Å—è–≥–æ–º: {txt}")
    if top_by_count:
        txt = " ‚Ä¢ ".join([f"{k} {v}" for k, v in top_by_count])
        lines.append(f"‚Ä¢ –ó–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é: {txt}")
    new_clients = payload.get("new_clients") or []
    if new_clients:
        lines.append(f"‚Ä¢ –ù–æ–≤—ñ –∑–∞ —Ç–∏–∂–¥–µ–Ω—å: {', '.join(new_clients)}")
    lines.append("")

    # File mix
    lines.append("**–¢–∏–ø–∏ —Ñ–∞–π–ª—ñ–≤**")
    if top_ext:
        txt = " ‚Ä¢ ".join([f"{k} {v}" for k, v in top_ext])
        lines.append(f"‚Ä¢ –ù–∞–π—á–∞—Å—Ç—ñ—à—ñ: {txt}")
    if largest_files:
        for (fn, sz, who) in largest_files:
            safe_fn = (fn or "").replace("`", " º")
            lines.append(f"‚Ä¢ –ù–∞–π–±—ñ–ª—å—à–∏–π: `{safe_fn}` ‚Äî {humanReadableSize(sz)} –≤—ñ–¥ {who}")
    lines.append("")

    # Retention
    lines.append("**–†–µ—Ç–µ–Ω—Ü—ñ—è**")
    lines.append(f"‚Ä¢ –ù–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è –∞–≤—Ç–æ—Å—Ç–∞—Ä—Ç –≤–∏–¥–∞–ª–µ–Ω–Ω—è (T‚Äì{retention_notice_days}–¥): {soon} —Ñ–∞–π–ª(–∏)")
    lines.append(f"‚Ä¢ –í–∏–¥–∞–ª–µ–Ω–æ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è: {deleted_files_count} —Ñ–∞–π–ª(–∏) ({humanReadableSize(deleted_bytes)})")
    if oldest is not None:
        lines.append(f"‚Ä¢ –ù–∞–π—Å—Ç–∞—Ä—ñ—à–∏–π –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π: {oldest} –¥–Ω.")
    lines.append("")

    # Alerts
    alerts: List[str] = []
    if infected_count > 0:
        alerts.append("‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ —ñ–Ω—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è")
    if scan_error_count > 0:
        alerts.append("‚ö†Ô∏è –ë—É–ª–∏ –ø–æ–º–∏–ª–∫–∏ –∞–Ω—Ç–∏–≤—ñ—Ä—É—Å–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏")
    if alerts:
        lines.append("**–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è**")
        for a in alerts:
            lines.append(f"‚Ä¢ {a}")
        lines.append("")

    return "\n".join(lines).strip()

def unsupported_media() -> str:
    return (
        "‚ÑπÔ∏è –¶–µ–π —Ç–∏–ø –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è.\n"
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–∞–π–ª —è–∫ *–¥–æ–∫—É–º–µ–Ω—Ç* –∞–±–æ *—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é*. "
        "–í—ñ–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ñ, —Å—Ç—ñ–∫–µ—Ä–∏ —Ç–∞ –≥–µ–æ–ø–æ–∑–∏—Ü—ñ—é –±–æ—Ç –Ω–µ –ø—Ä–∏–π–º–∞—î."
    )